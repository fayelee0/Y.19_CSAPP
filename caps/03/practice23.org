#+AUTHOR: Fei Li
#+EMAIL: wizard@pursuetao.com
* Practice 23

  #+BEGIN_SRC c

  long dw_loop(long x)
  {
      long y  = x * x;
      long *p = &x;
      long n  = 2 * x;
      
      do {
          x += y;
          (*p)++;
          n--;
      } while (n > 0);

      return x;
  }
  
  #+END_SRC


  #+BEGIN_SRC asm

  ; long dw_loop(long x)
  ; x in %rdi
  dw_loop:
    movq  %rdi,%rax            ; rax = x                ; rax ~ x
    movq  %rdi,%rcx            ; rcx = x                ; 
    imulq %rdi,%rcx            ; rcx = x * x            ; rcx ~ y
    leaq  (%rdi,%rdi),%rdx     ; rdx = x + x            ; rdx ~ n
  .L2:
    leaq  1(%rcx,%rax),%rax    ; rax = (x + y) + 1
    subq  $1,%rdx              ; n - 1
    testq %rdx,%rdx            ; n:n
    jg    .L2                  ; if n > 0 jump to .L2
    rep; ret
  
  #+END_SRC

** A

   x in %rax 
   y in %rcx
   n in %rdx


** B
   
   (*p)++ == x++


** C

   in asm code block
